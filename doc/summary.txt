Chris Gala
ID#: 64338761
CS 171 FinalAI

FinalAI

Code Structure & Strategy:  In the "__init__" method for the "Agent()" class, I provided the class with a number of variables ranging from booleans to dictionaries and sets to integers.  These variables all helped keep track of a number of things from which row and column the agent was in to whether or not it had achieved certain things like getting Gold, shooting the Arrow, killing the Wumpus, etc.

In the "get_move" method for the "Agent()" class, I computed a number of things and changed values of variables from the "__init__" method so that my Agent could adapt to the changing of the tiles.  For example, I came up with a method for keeping track of the direction that the Agent was facing. This method was based on the number of Left Turns the Agent executed. By default, the Agent faces right which corresponds to 0 Left Turns, in which 1 Left Turn makes the Agent face up, 2 makes the Agent face left, and 3 makes the Agent face down. Other variables like the boolean variables helped in knowing what to focus on.  If the "hasGold" boolean variable is "False" then the Agent is solely focused on that task, otherwise it cares nothing about shooting arrows or the Wumpus or pits; it only wants to get out by returning to the "startSpot" which of course has coordinates (1, 1).

These coordinates were also helpful when supplying the sets and dictionaries I had provided for my Agent. I kept track of coordinates I had visited and possible coordinates containing a Wumpus or a pit.  The cleverness of my code accounted for tiles that I had visited that no longer needed to be in the dictionaries of possible Wumpus or pit coordinates.  If I had visited the tile and my Agent was still alive, those coordinates could be removed from the Wumpus and pit dictionaries if in them, marked safe, and never be added back into the Wumpus or pit dictionaries. The reason for using dictionaries is so that the key would translate to a tuple of x, y values for the coordinates, and the value for that corresponding key would be a simple count, starting at 1. As the Agent encounters more "Stenches" and "Breezes" it can increase the counts of possible coordinates that are already in the Wumpus and pit dictionaries. Basically, if the calculated potential coordinates have already been added from a previous "Stench" or "Breeze" tile, simply increase the count by 1 to show that the key with a higher integer value is most likely to the be the tile that contains a Wumpus or pit. This is much better than guessing at random which could be the tiles that contains those dangers.

Outliers:

Along the way, my Agent would encounter problems like endless loops or simply taking too long to try and find the Gold.  To handle these rare occurrences, I kept track of the Agents score on my own using the scoring system and if that score dropped too low (different lows based on the size of the board), I would simply tell the Agent that it has the Gold (even if it doesn't) so that it would get out of the cave.  Also, if the Agent was stuck in one tile for a few turns, I would again tell it that it has the Gold (even if it doesn't) so that it wouldn't just stay in one tile turning Left and Right and Left again and again, damaging my overall score.